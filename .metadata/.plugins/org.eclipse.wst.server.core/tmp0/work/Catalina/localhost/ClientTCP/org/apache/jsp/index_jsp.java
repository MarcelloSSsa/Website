/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M20
 * Generated at: 2017-12-14 18:31:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import java.net.*;
import com.modulos.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("com.modulos");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<!-- start: Meta -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Dashboard</title>\r\n");
      out.write("<!-- end: Meta -->\r\n");
      out.write("\r\n");
      out.write("<!-- start: Mobile Specific -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- end: Mobile Specific -->\r\n");
      out.write("\r\n");
      out.write("<!-- start: CSS -->\r\n");
      out.write("<link id=\"bootstrap-style\" href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"css/bootstrap-responsive.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link id=\"base-style\" href=\"css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("<link id=\"base-style-responsive\" href=\"css/style-responsive.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("\thref='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800&subset=latin,cyrillic-ext,latin-ext'\r\n");
      out.write("\trel='stylesheet' type='text/css'>\r\n");
      out.write("<!-- end: CSS -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- The HTML5 shim, for IE6-8 support of HTML5 elements -->\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("\t  \t<script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\r\n");
      out.write("\t\t<link id=\"ie-style\" href=\"css/ie.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<![endif]-->\r\n");
      out.write("\r\n");
      out.write("<!--[if IE 9]>\r\n");
      out.write("\t\t<link id=\"ie9style\" href=\"css/ie9.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<![endif]-->\r\n");
      out.write("\r\n");
      out.write("<!-- start: Favicon -->\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"img/favicon.ico\">\r\n");
      out.write("<!-- end: Favicon -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<form method=\"POST\" action=\"index.jsp\">\r\n");
      out.write("\t\t<!-- start: Header -->\r\n");
      out.write("\t\t<div class=\"navbar\">\r\n");
      out.write("\t\t\t<div class=\"navbar-inner\">\r\n");
      out.write("\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t\t\t<a class=\"btn btn-navbar\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\t\t\t\tdata-target=\".top-nav.nav-collapse,.sidebar-nav.nav-collapse\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n");
      out.write("\t\t\t\t\t\tclass=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t</a> <a class=\"brand\" href=\"index.html\"><span>Network Sensor</span></a>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- start: Header Menu -->\r\n");
      out.write("\t\t\t\t\t<div class=\"nav-no-collapse header-nav\">\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"nav pull-right\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<!-- start: User Dropdown -->\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"dropdown\"><a class=\"btn dropdown-toggle\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-toggle=\"dropdown\" href=\"#\"> <i\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"halflings-icon white user\"></i> Marcello <span\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"caret\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li class=\"dropdown-menu-title\"><span>Account\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tSettings</span></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i class=\"halflings-icon user\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tProfile</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"login.html\"><i class=\"halflings-icon off\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tLogout</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul></li>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- end: User Dropdown -->\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- end: Header Menu -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- start: Header -->\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"container-fluid-full\">\r\n");
      out.write("\t\t\t<div class=\"row-fluid\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- start: Main Menu -->\r\n");
      out.write("\t\t\t\t<div id=\"sidebar-left\" class=\"span2\">\r\n");
      out.write("\t\t\t\t\t<div class=\"nav-collapse sidebar-nav\">\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"nav nav-tabs nav-stacked main-menu\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"index.html\"><i class=\"icon-bar-chart\"></i><span\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"hidden-tablet\"> Dashboard</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"messages.html\"><i class=\"icon-envelope\"></i><span\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"hidden-tablet\"> Messages</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"tasks.html\"><i class=\"icon-tasks\"></i><span\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"hidden-tablet\"> Tasks</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- end: Main Menu -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- start: Content -->\r\n");
      out.write("\t\t\t\t<div id=\"content\" class=\"span10\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<ul class=\"breadcrumb\">\r\n");
      out.write("\t\t\t\t\t\t<li><i class=\"icon-home\"></i> <a href=\"index.html\">Home</a> <i\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"icon-angle-right\"></i></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">Dashboard</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						/*<div class="row-fluid">
									
									<div class="span3 statbox purple" onTablet="span6" onDesktop="span3">
										<!-- Pagina de temperatura aqui. -->
										<iframe width="560" height="315" src="" frameborder="0" allowfullscreen></iframe>
									</div>
									<div class="span3 statbox green" onTablet="span6" onDesktop="span3">
										<div class="boxchart">1,2,6,4,0,8,2,4,5,3,1,7,5</div>
										<div class="number">123<i class="icon-arrow-up"></i></div>
										<div class="title">sales</div>
									</div>
								</div>*/
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						List<Modulo> moduloList = new ArrayList<Modulo>();
						Modulo modulo = new Modulo();
						ModuloQuantidade num = new ModuloQuantidade();
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						try {
							int character;
							Socket socket = new Socket("192.168.1.102", 8888);

							InputStream inSocket = socket.getInputStream();
				
							OutputStream outSocket = socket.getOutputStream();
							moduloList.clear();

							String str = null;
							str = request.getParameter("comando");
							System.out.println("request " + str);
							if (str == null)
								str = "1;3";
							String comando = null;
							byte buffer[] = str.getBytes();
							byte[] bufferIn = new byte[1024];
							outSocket.write(buffer);

							ByteArrayOutputStream result = new ByteArrayOutputStream();

							while ((character = inSocket.read(bufferIn)) != -1) {
								System.out.println((char) character);
								result.write(bufferIn, 0, character);
							}

							comando = result.toString("UTF-8");
							
							System.out.println("comando: "+comando);
							
							String[] array = comando.split(";");
							System.out.println("array: "+array.length);
							if (array.length > 1){
								for (int i = 0; i < array.length-1; i++) {
									System.out.println("posição "+i+":"+array[i]);
								}
								
								num.setQtdModulos(Integer.parseInt(array[0]));
								int indice = 0;
								for (int i = 0; i < num.getQtdModulos(); i++){
									modulo.setQtdModulo(Integer.parseInt(array[0]));
									indice++;
									modulo.setId(Integer.parseInt(array[indice]));
									indice++;
									modulo.setLeitura(array[indice]);
									moduloList.add(modulo);
								}
							}
							
							System.out.println("num qtd " + num.getQtdModulos());

							socket.close();
						} catch (java.net.ConnectException e) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\tErro: Não foi possível encontrar o servidor, verifique se a rede está funcionando corretamente.\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						//response.setIntHeader("Refresh", 50);
						out.println("<div class=\"row-fluid\">");
						String analog[] = null;
						String analogic = null;
						System.out.println("num qtd2 " + num.getQtdModulos());
						for (int i = 0; i < num.getQtdModulos(); i++) {
							if (moduloList.isEmpty()){
								//analog[i] = "0.0";
							}
							else{ 
								//analogic = moduloList.get(i).getLeitura();
								//analog[i] = analogic.toString();
							}
							out.println("<div class=\"span3 statbox yellow\" onTablet=\"span6\" style=\"height:282px\" onDesktop=\"span3\">");
							out.println("<div class=\"number\">"+ moduloList.get(i).getLeitura() +"<i class=\"icon-rss\"></i></div>");
							out.println("<a class=\"brand\"><span>Módulo: " + (i + 1) + " </span></a>");
							out.println("<iframe width=\"560\" height=\"315\" src=\"\" frameborder=\"0\" allowfullscreen></iframe>");
							out.println("<div class=\"footer\">");
							out.print("<button type=\"submit\" name=\"comando\" class=\"btn btn-primary\" value=\"" + (i + 1) + ";1\">Ligar</button>&nbsp;");
							out.print("<button type=\"submit\" name=\"comando\" class=\"btn btn-primary\" value=\"" + (i + 1) + ";0\">Desligar</button>");
							out.println("</div>");
							out.println("</div>");
						}
						out.println("</div>");
						for (int i = 0; i<moduloList.size();i++){
							System.out.println("Id "+i+" :"+moduloList.get(i).getId());
							System.out.println("Leitura "+i+" :"+moduloList.get(i).getLeitura());
							System.out.println("QTD "+i+" :"+moduloList.get(i).getQtdModulo());
						}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"row-fluid\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!--/.fluid-container-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- end: Content -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!--/#content.span10-->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!--/fluid-row-->\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"modal hide fade\" id=\"myModal\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">×</button>\r\n");
      out.write("\t\t\t\t<h3>Settings</h3>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t<p>Here settings can be configured...</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t<a href=\"#\" class=\"btn\" data-dismiss=\"modal\">Close</a> <a href=\"#\"\r\n");
      out.write("\t\t\t\t\tclass=\"btn btn-primary\">Save changes</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<footer>\r\n");
      out.write("\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<span style=\"text-align: left; float: left\">&copy; 2017 <a\r\n");
      out.write("\t\t\thref=\"http://jiji262.github.io/Bootstrap_Metro_Dashboard/\"\r\n");
      out.write("\t\t\talt=\"Bootstrap_Metro_Dashboard\">Network Sensor Dashboard</a></span>\r\n");
      out.write("\r\n");
      out.write("\t</p>\r\n");
      out.write("\r\n");
      out.write("\t</footer>\r\n");
      out.write("\r\n");
      out.write("\t<!-- start: JavaScript-->\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery-1.9.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/jquery-migrate-1.0.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery-ui-1.10.0.custom.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.ui.touch-punch.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/modernizr.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.cookie.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src='js/fullcalendar.min.js'></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src='js/jquery.dataTables.min.js'></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/excanvas.js\"></script>\r\n");
      out.write("\t<script src=\"js/jquery.flot.js\"></script>\r\n");
      out.write("\t<script src=\"js/jquery.flot.pie.js\"></script>\r\n");
      out.write("\t<script src=\"js/jquery.flot.stack.js\"></script>\r\n");
      out.write("\t<script src=\"js/jquery.flot.resize.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.chosen.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.uniform.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.cleditor.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.noty.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.elfinder.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.raty.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.iphone.toggle.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.uploadify-3.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.gritter.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.imagesloaded.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.masonry.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.knob.modified.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.sparkline.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/counter.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/retina.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/custom.js\"></script>\r\n");
      out.write("\t<!-- end: JavaScript-->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
